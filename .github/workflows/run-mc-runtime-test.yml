name: Run all versions with mc-runtime-test
on:
  workflow_dispatch:
  workflow_call:

jobs:
  run:
    strategy:
      matrix:
        version:
          - { dir: 1_21, mc: 1.21.4, type: lexforge, modloader: forge, regex: .*forge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.4, type: neoforge, modloader: neoforge, regex: .*neoforge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.4, type: fabric, modloader: fabric, regex: .*fabric.*, java: 21 }
          - { dir: 1_21, mc: 1.21.3, type: lexforge, modloader: forge, regex: .*forge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.3, type: neoforge, modloader: neoforge, regex: .*neoforge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.3, type: fabric, modloader: fabric, regex: .*fabric.*, java: 21 }
          - { dir: 1_21, mc: 1.21.1, type: lexforge, modloader: forge, regex: .*forge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.1, type: neoforge, modloader: neoforge, regex: .*neoforge.*, java: 21 }
          - { dir: 1_21, mc: 1.21.1, type: fabric, modloader: fabric, regex: .*fabric.*, java: 21 }
          #- { dir: 1_21, mc: 1.21, type: lexforge, modloader: lexforge, regex: .*forge.*, java: 21 }
          #- { dir: 1_21, mc: 1.21, type: neoforge, modloader: neoforge, regex: .*neoforge.*, java: 21 }
          #- { dir: 1_21, mc: 1.21, type: fabric, modloader: fabric, regex: .*fabric.*, java: 21 }
          - { dir: 1_20, mc: 1.20.6, type: lexforge, modloader: lexforge, regex: .*forge.*, java: 21 }
          - { dir: 1_20, mc: 1.20.6, type: neoforge, modloader: neoforge, regex: .*neoforge.*, java: 21 }
          - { dir: 1_20, mc: 1.20.6, type: fabric, modloader: fabric, regex: .*fabric.*, java: 21 }
          - { dir: 1_19, mc: 1.19.4, type: lexforge, modloader: lexforge, regex: .*forge.*, java: 17 }
          - { dir: 1_19, mc: 1.19.4, type: fabric, modloader: fabric, regex: .*fabric.*, java: 17 }
          - { dir: 1_16, mc: 1.16.5, type: lexforge, modloader: lexforge, regex: .*forge.*, java: 8 }
          - { dir: 1_16, mc: 1.16.5, type: fabric, modloader: fabric, regex: .*fabric.*, java: 8 }
          - { dir: 1_12, mc: 1.12.2, type: lexforge, modloader: lexforge, regex: .*forge.*, java: 8 }
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.version.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Grant execute permission for gradlew
        working-directory: ./${{ matrix.version.dir }}
        run: chmod +x gradlew
      - name: Build with Gradle
        working-directory: ./${{ matrix.version.dir }}
        run: ./gradlew build --stacktrace
      - name: Create mods dir
        run: mkdir -p run/mods
      - name: List mod files
        run: ls ${{ matrix.version.dir }}/build/libs
      - name: Delete dev jar
        run: rm ${{ matrix.version.dir }}/build/libs/*-dev.jar
      - name: Delete remapped jar
        run: rm ${{ matrix.version.dir }}/build/libs/*-remapped.jar
      - name: Copy mod jar
        run: cp ${{ matrix.version.dir }}/build/libs/hmc-optimizations-*${{ matrix.version.type }}*.jar run/mods
      - name: List mod dir
        run: ls run/mods
      - name: Run the MC client
        uses: 3arthqu4ke/mc-runtime-test@3.0.0
        with:
          mc: ${{ matrix.version.mc }}
          modloader: ${{ matrix.version.modloader }}
          regex: ${{ matrix.version.regex }}
          java: ${{ matrix.version.java }}
          mc-runtime-test: ${{ matrix.version.type }}
          xvfb: false
          headlessmc-command: -lwjgl --retries 3 --jvm -Djava.awt.headless=true
